EL RESULTADO SE GUARDA EN LA VARIABLE DECLARADA

INCLUDE Irvine32.inc

.data
octalString BYTE 12 DUP(0)    ; Cadena para almacenar el resultado en octal

.code
DECIMAL_TO_OCTAL MACRO decimalValue
    mov eax, decimalValue         ; Cargar el valor decimal en EAX

    ; Inicialización de la cadena para el resultado en octal
    mov ecx, OFFSET octalString   ; Puntero al final de la cadena
    add ecx, 11                   ; Apunta al último byte (reservado para null)
    mov byte ptr [ecx], 0         ; Termina la cadena con null

    mov ebx, 8                    ; Base octal

    ; Bucle de conversión de decimal a octal
    ConvLoop:
        mov edx, 0                ; Limpiar el valor de EDX
        div ebx                   ; Dividir EAX entre 8, el cociente en EAX, el residuo en EDX
        add dl, '0'               ; Convertir el residuo a carácter ASCII
        dec ecx                   ; Mover el puntero de cadena hacia atrás
        mov [ecx], dl             ; Almacenar el carácter en la cadena

        test eax, eax             ; Verificar si el cociente es 0
        jnz ConvLoop              ; Si no es 0, continuar el bucle

    ; Imprimir la cadena desde el inicio del número octal
    mov edx, ecx                  ; Mover el puntero al inicio de la cadena en EDX
    call WriteString              ; Imprimir la cadena desde EDX

ENDM

main PROC
    ; Llamada a la macro para convertir el número 25 a octal
    DECIMAL_TO_OCTAL 25

    call Crlf                  ; Nueva línea
    exit
main ENDP

END main
